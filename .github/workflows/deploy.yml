name: Deploy NixOS Configuration

on:
  push:
    branches:
      - main # or your default branch name

jobs:
  deploy:
    runs-on: self-hosted
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Create temporary directory
        run: |
          TEMP_DIR=$(mktemp -d)
          echo "TEMP_DIR=$TEMP_DIR" >> $GITHUB_ENV

      - name: Set up SSH key
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH_PRIVATE_KEY }}
        run: |
          mkdir -p $TEMP_DIR/.ssh
          echo "$SSH_PRIVATE_KEY" > $TEMP_DIR/.ssh/id_rsa
          chmod 600 $TEMP_DIR/.ssh/id_rsa

      - name: Add server to known hosts
        env:
          SERVER_IP: ${{ secrets.SERVER_IP }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
        run: |
          if ! ssh-keyscan -H $SERVER_IP >> $TEMP_DIR/.ssh/known_hosts 2>/dev/null; then
            echo "Failed to scan SSH host key. Debugging information:"
            echo "SERVER_IP: $SERVER_IP"
            echo "TEMP_DIR: $TEMP_DIR"
            echo "Current directory: $(pwd)"
            echo "Contents of TEMP_DIR:"
            ls -la $TEMP_DIR
            echo "Attempting to ping the server:"
            ping -c 4 $SERVER_IP
            echo "Attempting to connect to SSH port:"
            if timeout 5 ssh -i $TEMP_DIR/.ssh/id_rsa -o StrictHostKeyChecking=no -o ConnectTimeout=5 $SERVER_USER@$SERVER_IP echo "SSH Port is open" 2>/dev/null; then
              echo "SSH port is open and accessible"
            else
              echo "Failed to connect to SSH port"
            fi
            exit 1
          else
            echo "Successfully added $SERVER_IP to known hosts"
          fi

      - name: Check known_hosts file
        run: |
          echo "Contents of known_hosts file:"
          cat $TEMP_DIR/.ssh/known_hosts

      - name: Check SSH connection
        env:
          SERVER_IP: ${{ secrets.SERVER_IP }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
        run: |
          if ! ssh -i $TEMP_DIR/.ssh/id_rsa -o UserKnownHostsFile=$TEMP_DIR/.ssh/known_hosts -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "echo 'SSH connection successful'"; then
            echo "Failed to establish SSH connection. Debugging information:"
            echo "SERVER_IP: $SERVER_IP"
            echo "SERVER_USER: $SERVER_USER"
            echo "TEMP_DIR: $TEMP_DIR"
            echo "SSH key permissions:"
            ls -l $TEMP_DIR/.ssh/id_rsa
            echo "Known hosts file contents:"
            cat $TEMP_DIR/.ssh/known_hosts
            exit 1
          fi

      - name: Copy deploy script to server
        env:
          SERVER_IP: ${{ secrets.SERVER_IP }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
        run: |
          scp -i $TEMP_DIR/.ssh/id_rsa -o UserKnownHostsFile=$TEMP_DIR/.ssh/known_hosts \
            deploy_script.sh $SERVER_USER@$SERVER_IP:~/deploy_script.sh

      - name: Run deploy script on server
        env:
          SERVER_IP: ${{ secrets.SERVER_IP }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
          REPO_URL: ${{ github.server_url }}/${{ github.repository }}.git
        run: |
          ssh -i $TEMP_DIR/.ssh/id_rsa -o UserKnownHostsFile=$TEMP_DIR/.ssh/known_hosts \
            $SERVER_USER@$SERVER_IP "REPO_URL=$REPO_URL bash ~/deploy_script.sh"

      - name: Clean up
        if: always()
        env:
          SERVER_IP: ${{ secrets.SERVER_IP }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
        run: |
          ssh -i $TEMP_DIR/.ssh/id_rsa -o UserKnownHostsFile=$TEMP_DIR/.ssh/known_hosts \
            $SERVER_USER@$SERVER_IP "rm ~/deploy_script.sh"
          rm -rf $TEMP_DIR
